0002_create_initial_superuser.py

# backend/users/migrations/0002_create_initial_superuser.py
from django.db import migrations


def create_initial_superuser(apps, schema_editor):
    """初期管理者ユーザーを作成"""
    User = apps.get_model('users', 'User')
    
    # 既に管理者が存在する場合はスキップ
    if User.objects.filter(is_admin=True).exists():
        return
    
    # employee_id で管理者が存在しないか確認
    if not User.objects.filter(employee_id='9999').exists():
        # ⚠️ create_superuser は使えないので、直接作成してパスワードをハッシュ化
        from django.contrib.auth.hashers import make_password
        
        User.objects.create(
            employee_id='9999',  # ← 認証IDとして employee_id を使用
            username='管理者',     # ← 表示名（ユニーク制約なし）
            email='admin@example.com',
            password=make_password('test1234'),  # ← 初期パスワード（後で変更推奨）
            is_admin=True,
            is_staff=True,
            is_superuser=True,
            is_active=True,
        )


def reverse_func(apps, schema_editor):
    """ロールバック処理（必要に応じて）"""
    User = apps.get_model('users', 'User')
    User.objects.filter(employee_id='admin').delete()


class Migration(migrations.Migration):
    
    dependencies = [
        ('users', '0001_initial'),  # 前のマイグレーションに依存
    ]
    
    operations = [
        migrations.RunPython(create_initial_superuser, reverse_func),
    ]

*********************************************************
 <!-- No列（index+1） -->
                <template v-slot:item.id="{ item, index }">
                    <span class="font-weight-medium">
                        {{ (currentPage - 1) * itemsPerPage + index + 1 }}
                    </span>
                </template>

// テーブルヘッダー（ソート可能に変更）
const headers = computed(() => [
    {
        title: t('common.number'),
        key: 'id',
        sortable: false,
        width: 80,
    },


import { routes } from '@/constants/routes';
routes.LOGIN

（Vue 3/Vuetify 3の推奨） プロパティ (:icon="...") の使用が推奨
import { ICONS } from '@/constants/icons';
<v-icon :icon="ICONS.action.edit"></v-icon>

ja.json
{
  "form": {
    "fields": {
      "employeeId": "社員ID",
      "password": "パスワード"
    },
    "hints": {
      // ⭐ パスワードのヒント用キーを追加
      "password_requirements": "8文字以上、英字と数字を含む" 
    },
    "buttons": {
      "login": "ログイン"
    }
  },
  // ... (その他の翻訳キー)
}

// i18n の t 関数を取得
import { useI18n } from 'vue-i18n';
const { t } = useI18n();
↓
 :hint="t('form.hints.password_requirements')" 