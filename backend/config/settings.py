"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 4.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ycbc+50@xd3u8)6tsw27*q6!uz2l2asg0-$wdgs^j99wokh1w@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition
# INSTALLED_APPS は「このアプリをDjangoに登録するよ！」って宣言
INSTALLED_APPS = [
    "django.contrib.admin",        # 管理画面
    "django.contrib.auth",         # 認証
    "django.contrib.contenttypes", # 権限管理のベース
    "django.contrib.sessions",     # セッション機能
    "django.contrib.messages",     # フラッシュメッセージ
    "django.contrib.staticfiles",  # 静的ファイル
     # サードパーティ
    "rest_framework",
    "corsheaders",
    "django_filters",
    
    # 自作アプリ
    "accounts",  # api/ から accounts/ に変更
    "users",
]

# 💡 小文字で指定します
# AUTH_USER_MODEL = 'users.CustomUser'
AUTH_USER_MODEL = 'users.User'

AUTHENTICATION_BACKENDS = [
    'accounts.backends.EmployeeIdBackend',
    # 'django.contrib.auth.backends.ModelBackend',  # デフォルトのバックエンド
]

REST_FRAMEWORK = {
    # APIを叩いたときに「誰がアクセスしているか」を判定する方法を指定
    # SessionAuthentication → Django標準のセッション（Cookie）を使って認証
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework.authentication.SessionAuthentication",
    ],
    # 認証済みユーザーにしかアクセスを許可するルール
    # IsAuthenticated → ログイン済みユーザーのみAPIアクセス可
    # 必要に応じて AllowAny にすると誰でもアクセス可能
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated",
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.SearchFilter',
        'rest_framework.filters.OrderingFilter',
    ],
}

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",  # ← 一番上寄りに追加
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# ⭐ キャッシュ設定（ブルートフォース対策用）
# 本番環境の場合 は Redis推奨:
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
    }
}

# CORS（開発用: フロントのURLを許可）
CORS_ALLOW_ALL_ORIGINS = False
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",  # Vue dev server
]

CORS_ALLOW_CREDENTIALS = True

SESSION_COOKIE_AGE = 86400  # 1 day
SESSION_EXPIRE_AT_BROWSER_CLOSE = False
SESSION_SAVE_EVERY_REQUEST = True  # アクティビティがあればセッション延長

# CSRF
CSRF_TRUSTED_ORIGINS = ["http://localhost:5173"]

CSRF_COOKIE_HTTPONLY = False
# SESSION_ENGINE = 'django.contrib.sessions.backends.db'
SESSION_COOKIE_SECURE = False     # https でない開発環境
# SESSION_COOKIE_HTTPONLY = True
CSRF_COOKIE_SECURE = False
# SESSION_COOKIE_SAMESITE = None

# CSRF_COOKIE_SAMESITE = None

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'ja'  # 日本語に変更
TIME_ZONE = 'Asia/Tokyo'  # 日本時間に変更

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
