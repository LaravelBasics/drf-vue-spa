# Generated by Django 4.2.9 on 2025-10-04 15:54

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('employee_id', models.CharField(db_index=True, help_text='ログイン認証に使用する一意の社員番号', max_length=20, unique=True, verbose_name='社員番号')),
                ('username', models.CharField(blank=True, help_text='表示用のユーザー名（ユニーク制約なし）', max_length=50, null=True, verbose_name='ユーザー名')),
                ('email', models.EmailField(blank=True, help_text='メールアドレス（任意）', max_length=255, null=True, verbose_name='メールアドレス')),
                ('is_admin', models.BooleanField(default=False, help_text='管理者権限を持つかどうか', verbose_name='管理者')),
                ('is_staff', models.BooleanField(default=False, help_text='Django管理サイトにアクセスできるかどうか', verbose_name='スタッフ')),
                ('is_active', models.BooleanField(default=True, help_text='アカウントが有効かどうか', verbose_name='アクティブ')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='削除日時')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'ユーザー',
                'verbose_name_plural': 'ユーザー',
                'db_table': 'users',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['employee_id'], name='users_employe_55e465_idx'), models.Index(fields=['is_active'], name='users_is_acti_847b48_idx'), models.Index(fields=['deleted_at'], name='users_deleted_e48316_idx')],
            },
        ),
    ]
